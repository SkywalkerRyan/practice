function isValidSudoku(board: string[][]): boolean {
	let rows = Array.from({ length: 9 }, () => new Set());
	let cols = Array.from({ length: 9 }, () => new Set());
	let boxes = Array.from({ length: 9 }, () => new Set());

	for (let i = 0; i < 9; i++) {
		for (let j = 0; j < 9; j++) {
			if (board[i][j] === '.') continue;

			let val = board[i][j];
			let boxIndex = Math.floor(i / 3) * 3 + Math.floor(j / 3);

			if (rows[i].has(val) || cols[j].has(val) || boxes[boxIndex].has(val)) return false;

			rows[i].add(val);
			cols[j].add(val);
			boxes[boxIndex].add(val);
		}
	}

	return true;
}

console.log(
	isValidSudoku([
		['5', '3', '.', '.', '7', '.', '.', '.', '.'],
		['6', '.', '.', '1', '9', '5', '.', '.', '.'],
		['.', '9', '8', '.', '.', '.', '.', '6', '.'],
		['8', '.', '.', '.', '6', '.', '.', '.', '3'],
		['4', '.', '.', '8', '.', '3', '.', '.', '1'],
		['7', '.', '.', '.', '2', '.', '.', '.', '6'],
		['.', '6', '.', '.', '.', '.', '2', '8', '.'],
		['.', '.', '.', '4', '1', '9', '.', '.', '5'],
		['.', '.', '.', '.', '8', '.', '.', '7', '9'],
	])
);
// console.log(
// 	isValidSudoku([
// 		['.', '.', '.', '.', '5', '.', '.', '1', '.'],
// 		['.', '4', '.', '3', '.', '.', '.', '.', '.'],
// 		['.', '.', '.', '.', '.', '3', '.', '.', '1'],
// 		['8', '.', '.', '.', '.', '.', '.', '2', '.'],
// 		['.', '.', '2', '.', '7', '.', '.', '.', '.'],
// 		['.', '1', '5', '.', '.', '.', '.', '.', '.'],
// 		['.', '.', '.', '.', '.', '2', '.', '.', '.'],
// 		['.', '2', '.', '9', '.', '.', '.', '.', '.'],
// 		['.', '.', '4', '.', '.', '.', '.', '.', '.'],
// 	])
// );
